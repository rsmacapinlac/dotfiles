# Add RVM to PATH for scripting
PATH=$PATH:$HOME/bin:$HOME/go/bin

# eval "$(rbenv init -)"

# Load RVM into a shell session *as a function*
PATH=/usr/local/rvm/bin:$PATH
[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm"

# Force the terminal to identify as xterm and 256 colors
[[ "$TERM" == "xterm" ]] && export TERM=xterm-256color

setopt auto_cd
cdpath=($HOME/workspace $HOME)

# script to open up the emo journal in vim
function journal() {
  if [ -z "$1" ]; then
    FILENAME=$(date "+%Y-%m-%d.md")
  else
    FILENAME=$1.md
  fi

  FILEPATH=$(date "+%Y/%m/%d %a")
  FULLPATH="$HOME/Dropbox/Journal/$FILEPATH/$FILENAME"
  if [ ! -f $FULLPATH ]; then
    touch "$FULLPATH"
  fi
  vim -c Goyo $FULLPATH
}
# vim -c Goyo ~/Dropbox/Journal/$FILEDATE

# script to delete and rebuild a rails development db
function rebuild-rails-db() {
  rm db/development.sqlite3 && rm db/test.sqlite3
  bundle exec rake db:migrate
  bundle exec rake db:seed
  bundle exec rake db:test:prepare
  bundle exec rake db:seed RAILS_ENV=test
}

# start-coding setup
function start-code() {
  DIRECTORY=~/code/$1
  if [ -d $DIRECTORY ]; then
    cd $DIRECTORY
    TMUX_RUNNING=`ps -ef | grep -v grep | grep 'tmux' | wc -l`
    if [ $TMUX_RUNNING == 0 ]
    then
      tmux new-session -s $1
    else
      tmux attach -t $1
    fi
  else
    echo "$1 doesn't exist ($DIRECTORY)"
  fi
}

# alias
# git command for displaying the git tree
alias gg='git log --oneline --abbrev-commit --all --graph --decorate --color'
alias stc=start-code # so you can do 'stc <codebase>'
alias rr-db=rebuild-rails-db # commands to rebuild your rails application db
alias j=journal # command to open the emo-journal ala vim
alias fuck='sudo $(fc -ln -1)'

# disable scroll lock
stty -ixon

# todo alias
# export TODOTXT_DEFAULT_ACTION=ls
# export TODOTXT_AUTO_ARCHIVE=0
# alias t='todo.sh'

